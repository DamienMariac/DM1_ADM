rm(list = ls())
data <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep=";")
data2 <- data[1 :1000,] #On enlève la ligne qui pose problème
espece <- paste0("gen", 1:27)
# Calculer la densité de peuplement pour chaque espèce
densité <- data2[espece] / data2$surface
densité <- as.matrix(densité) # Convertir la dataframe densité en matrice densité
# Calcul de la moyenne des densités pour chaque espèce
moyenne_densité <- colMeans(densité)
#Centrons nos densité :
densités_centrées <- densité - matrix(moyenne_densité, nrow = nrow(densité), ncol = ncol(densité), byrow = TRUE)
#On calcul les écarts-types
ecarts_type_densité <- apply(densités_centrées, 2, sd)
#Enfin on standarise nos densité
densités_standardisées <- densités_centrées / matrix(ecarts_type_densité, nrow = nrow(densité), ncol = ncol(densité), byrow = TRUE)
# Vérification des résultats, calcul des variances des colonnes après standardisation
variances_standardisées <- apply(densités_standardisées, 2, var)
# Inertie totale (on doit avoir 27)
inertie_totale <- sum(variances_standardisées)
##### Question 2 ####
#Calcul des poids de chaque forest.
poid_forest <-table(data2$forest)/1000
types_forestiers <- sort(unique(data2$forest)) #On trie les types de forest par odre croissant
# Créer une matrice pour stocker les barycentres de chaque type forestier (7 x 27)
barycentres_forestiers <- matrix(0, nrow = 7, ncol = 27)
# Calculer le barycentre pour chaque type forestier
for (i in 1:length(types_forestiers)) {
type <- types_forestiers[i]
parcelles_type <- densités_standardisées[data2$forest == type, ]
# Calcul du barycentre pour ce type (moyenne des lignes correspondant à ce type)
barycentres_forestiers[i, ] <- colMeans(parcelles_type)
}
# Calcul des normes euclidiennes carrées des barycentres
normes_euclidiennes <- apply(barycentres_forestiers, 1, function(x) sum(x^2))
# Calcul des poids des types forestiers
poids_forestiers <- table(data2$forest) / nrow(data2)
# Calcul de l'inertie inter-types
inertie_inter_types <- sum(normes_euclidiennes * poids_forestiers)
# Calcul du R^2
R2 <- inertie_inter_types / 27
# Initialisation du vecteur pour stocker les R^2 de chaque espèce
R2_par_espece <- numeric(27)
# Calcul du R² pour chaque espèce individuellement
for (j in 1:27) {
# Inertie totale pour l'espèce j (variance de la colonne j de densités_standardisées)
inertie_totale_espece <- var(densités_standardisées[, j])
# Inertie inter-types pour l'espèce j (lié aux barycentres des types forestiers pour cette espèce)
inertie_inter_espece <- sum(poids_forestiers * (barycentres_forestiers[, j]^2))
# Calcul du R² pour cette espèce
R2_par_espece[j] <- inertie_inter_espece / inertie_totale_espece
}
R2_par_espece_df <- data.frame(Espece = espece, R2 = R2_par_espece)
# Trouver les espèces les plus et les moins liées aux types forestiers
especes_plus_liees <- R2_par_espece_df[which.max(R2_par_espece_df$R2), ]
especes_moins_liees <- R2_par_espece_df[which.min(R2_par_espece_df$R2), ]
mean_R2 <- mean(R2_par_espece)
print(mean_R2)
print(R2)
View(barycentres_forestiers)
rm(list = ls())
tab <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep = ";")
data <- tab[1 :1000,]
species_columns <- grep("gen", colnames(data), value = TRUE)
density_data <- data[species_columns] / data$surface
W <- diag(1/1000, 1000, 1000)
I_n <- rep(1, 1000)
Q <- as.matrix(density_data)
x_b <- t(Q) %*% W %*% I_n # moyenne
x_c <- Q - I_n %*% t(x_b) #x centré
vec_norm <- sqrt(diag(t(x_c) %*% W %*% x_c))
x_cr <- sweep(x_c, 2, vec_norm, FUN = "/")
tableau_cr <- as.data.frame(x_cr)
bar <- t(x_cr) %*% W %*% I_n
barycentre <- t(bar)
print(barycentre)
inertie_totale <- sum(diag(t(x_cr) %*% W %*% x_cr))
print(inertie_totale)
print(tableau_cr)
View(density_data)
View(tableau_cr)
rm(list = ls())
tab <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep = ";")
data <- tab[1 :1000,]
species_columns <- grep("gen", colnames(data), value = TRUE)
density_data <- data[species_columns] / data$surface
W <- diag(1/1000, 1000, 1000)
I_n <- rep(1, 1000)
Q <- as.matrix(density_data)
x_b <- t(Q) %*% W %*% I_n # moyenne (par projection)
x_c <- Q - I_n %*% t(x_b) #x centré (par projection)
vec_norm <- sqrt(diag(t(x_c) %*% W %*% x_c))
x_cr <- sweep(x_c, 2, vec_norm, FUN = "/")
tableau_cr <- as.data.frame(x_cr)
bar <- t(x_cr) %*% W %*% I_n
barycentre <- t(bar)
print(barycentre)
inertie_totale <- sum(diag(t(x_cr) %*% W %*% x_cr)) #inertie
print(inertie_totale)
print(tableau_cr)
##Question 2
##Question 2
rm(list = ls())
data <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep=";")
data2 <- data[1 :1000,] #On enlève la ligne qui pose problème
espece <- paste0("gen", 1:27)
# Calculer la densité de peuplement pour chaque espèce
densité <- data2[espece] / data2$surface
densité <- as.matrix(densité) # Convertir la dataframe densité en matrice densité
# Calcul de la moyenne des densités pour chaque espèce
moyenne_densité <- colMeans(densité)
#Centrons nos densité :
densités_centrées <- densité - matrix(moyenne_densité, nrow = nrow(densité), ncol = ncol(densité), byrow = TRUE)
#On calcul les écarts-types
ecarts_type_densité <- apply(densités_centrées, 2, sd)
#Enfin on standarise nos densité
densités_standardisées <- densités_centrées / matrix(ecarts_type_densité, nrow = nrow(densité), ncol = ncol(densité), byrow = TRUE)
# Vérification des résultats, calcul des variances des colonnes après standardisation
variances_standardisées <- apply(densités_standardisées, 2, var)
# Inertie totale (on doit avoir 27)
inertie_totale <- sum(variances_standardisées)
##### Question 2 ####
#Calcul des poids de chaque forest.
poid_forest <-table(data2$forest)/1000
View(densités_standardisées)
# Colonnes du type forestier
forest_types <- unique(data$forest)  # Il y a 7 types forestiers
n_types <- length(forest_types)
# Calcul des poids et barycentres des types forestiers
poids <- numeric(n_types)  # Poids de chaque type forestier
barycentres_types <- matrix(0, n_types, length(species_columns))  # Barycentres des types forestiers
for (i in 1:n_types) {
# Sélectionner les parcelles du type forestier i
parcelles_type_i <- which(data$forest == forest_types[i])
# Calcul du poids (proportion du type forestier)
poids[i] <- length(parcelles_type_i) / 1000  # Proportion de parcelles
# Barycentre pour ce type forestier
barycentres_types[i, ] <- colMeans(density_data[parcelles_type_i, ])
}
rm(list = ls())
tab <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep = ";")
data <- tab[1 :1000,]
species_columns <- grep("gen", colnames(data), value = TRUE)
density_data <- data[species_columns] / data$surface
W <- diag(1/1000, 1000, 1000)
I_n <- rep(1, 1000)
Q <- as.matrix(density_data)
x_b <- t(Q) %*% W %*% I_n # moyenne (par projection)
x_c <- Q - I_n %*% t(x_b) #x centré (par projection)
vec_norm <- sqrt(diag(t(x_c) %*% W %*% x_c))
x_cr <- sweep(x_c, 2, vec_norm, FUN = "/")
tableau_cr <- as.data.frame(x_cr)
bar <- t(x_cr) %*% W %*% I_n
barycentre <- t(bar)
print(barycentre)
inertie_totale <- sum(diag(t(x_cr) %*% W %*% x_cr)) #inertie
print(inertie_totale)
print(tableau_cr)
forest_types <- unique(data$forest)  # Il y a 7 types forestiers
n_types <- length(forest_types)
rm(list = ls())
tab <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep = ";")
data <- tab[1 :1000,]
species_columns <- grep("gen", colnames(data), value = TRUE)
density_data <- data[species_columns] / data$surface
W <- diag(1/1000, 1000, 1000)
I_n <- rep(1, 1000)
Q <- as.matrix(density_data)
x_b <- t(Q) %*% W %*% I_n # moyenne (par projection)
x_c <- Q - I_n %*% t(x_b) #x centré (par projection)
vec_norm <- sqrt(diag(t(x_c) %*% W %*% x_c))
x_cr <- sweep(x_c, 2, vec_norm, FUN = "/")
tableau_cr <- as.data.frame(x_cr)
bar <- t(x_cr) %*% W %*% I_n
barycentre <- t(bar)
print(barycentre)
inertie_totale <- sum(diag(t(x_cr) %*% W %*% x_cr)) #inertie
print(inertie_totale)
print(tableau_cr)
forest_types <- unique(data$forest)
n_types <- length(forest_types)
poids <- numeric(n_types)
barycentres_types <- matrix(0, n_types, length(species_columns))
for (i in 1:n_types) {
parcelles_type_i <- which(data$forest == forest_types[i])
poids[i] <- length(parcelles_type_i) / 1000
barycentres_types[i, ] <- colMeans(density_data[parcelles_type_i, ])
}
print(barycentres_types)
normes_carre_barycentres <- rowSums(barycentres_types^2)
print(normes_carre_barycentres)
inertie_inter_types <- sum(poids * normes_carre_barycentres)
print(inertie_inter_types)
R2 <- inertie_inter_types / inertie_totale
pourcentage_information <- R2 * 100
print(paste("R² :", R2))
print(paste("Pourcentage d'information expliqué :", pourcentage_information, "%"))
rm(list = ls())
tab <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep = ";")
data <- tab[1 :1000,]
species_columns <- grep("gen", colnames(data), value = TRUE)
density_data <- data[species_columns] / data$surface
W <- diag(1/1000, 1000, 1000)
I_n <- rep(1, 1000)
Q <- as.matrix(density_data)
x_b <- t(Q) %*% W %*% I_n # moyenne (par projection)
x_c <- Q - I_n %*% t(x_b) #x centré (par projection)
vec_norm <- sqrt(diag(t(x_c) %*% W %*% x_c))
x_cr <- sweep(x_c, 2, vec_norm, FUN = "/")
tableau_cr <- as.data.frame(x_cr)
bar <- t(x_cr) %*% W %*% I_n
barycentre <- t(bar)
print(barycentre)
inertie_totale <- sum(diag(t(x_cr) %*% W %*% x_cr)) #inertie
print(inertie_totale)
print(tableau_cr)
# Colonnes du type forestier
forest_types <- unique(data$forest)  # Il y a 7 types forestiers
n_types <- length(forest_types)
# Calcul des poids et barycentres des types forestiers
poids <- numeric(n_types)  # Poids de chaque type forestier
barycentres_types <- matrix(0, n_types, length(species_columns))  # Barycentres des types forestiers
for (i in 1:n_types) {
# Sélectionner les parcelles du type forestier i
parcelles_type_i <- which(data$forest == forest_types[i])
# Calcul du poids (proportion du type forestier)
poids[i] <- length(parcelles_type_i) / 1000  # Proportion de parcelles
# Barycentre pour ce type forestier (calculé sur les données centrées-réduites, x_cr)
barycentres_types[i, ] <- colMeans(x_cr[parcelles_type_i, ])
}
# Afficher les barycentres
print(barycentres_types)
# Calcul des normes euclidiennes carrées des barycentres
normes_carre_barycentres <- rowSums(barycentres_types^2)
print(normes_carre_barycentres)
# Calcul de l'inertie inter-types forestiers
inertie_inter_types <- sum(poids * normes_carre_barycentres)
print(paste("Inertie inter-types :", inertie_inter_types))
# Calcul du R² de la partition des parcelles en types forestiers
R2 <- inertie_inter_types / inertie_totale
pourcentage_information <- R2 * 100
print(paste("R² :", R2))
print(paste("Pourcentage d'information expliqué :", pourcentage_information, "%"))
rm(list = ls())
tab <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep = ";")
data <- tab[1 :1000,]
species_columns <- grep("gen", colnames(data), value = TRUE)
density_data <- data[species_columns] / data$surface
W <- diag(1/1000, 1000, 1000)
I_n <- rep(1, 1000)
Q <- as.matrix(density_data)
x_b <- t(Q) %*% W %*% I_n # moyenne (par projection)
x_c <- Q - I_n %*% t(x_b) #x centré (par projection)
vec_norm <- sqrt(diag(t(x_c) %*% W %*% x_c))
x_cr <- sweep(x_c, 2, vec_norm, FUN = "/")
tableau_cr <- as.data.frame(x_cr)
bar <- t(x_cr) %*% W %*% I_n
barycentre <- t(bar)
print(barycentre)
inertie_totale <- sum(diag(t(x_cr) %*% W %*% x_cr)) #inertie
print(inertie_totale)
print(tableau_cr)
forest_types <- unique(data$forest)
n_types <- length(forest_types)
poids <- numeric(n_types)
barycentres_types <- matrix(0, n_types, length(species_columns))
for (i in 1:n_types) {
parcelles_type_i <- which(data$forest == forest_types[i])
poids[i] <- length(parcelles_type_i) / 1000
barycentres_types[i, ] <- colMeans(x_cr[parcelles_type_i, ])
}
print(barycentres_types)
normes_carre_barycentres <- rowSums(barycentres_types^2)
print(normes_carre_barycentres)
inertie_inter_types <- sum(poids * normes_carre_barycentres)
print(paste("Inertie inter-types :", inertie_inter_types))
R2 <- inertie_inter_types / inertie_totale
pourcentage_information <- R2 * 100
print(paste("R² :", R2))
print(paste("Pourcentage d'information expliqué :", pourcentage_information, "%"))
print(normes_carre_barycentres)
rm(list = ls())
tab <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep = ";")
data <- tab[1 :1000,]
species_columns <- grep("gen", colnames(data), value = TRUE)
density_data <- data[species_columns] / data$surface
W <- diag(1/1000, 1000, 1000)
I_n <- rep(1, 1000)
Q <- as.matrix(density_data)
x_b <- t(Q) %*% W %*% I_n # moyenne (par projection)
x_c <- Q - I_n %*% t(x_b) #x centré (par projection)
vec_norm <- sqrt(diag(t(x_c) %*% W %*% x_c))
x_cr <- sweep(x_c, 2, vec_norm, FUN = "/")
tableau_cr <- as.data.frame(x_cr)
bar <- t(x_cr) %*% W %*% I_n
barycentre <- t(bar)
print(barycentre)
inertie_totale <- sum(diag(t(x_cr) %*% W %*% x_cr)) #inertie
print(inertie_totale)
print(tableau_cr)
forest_types <- unique(data$forest)
n_types <- length(forest_types)
poids <- numeric(n_types)
barycentres_types <- matrix(0, n_types, length(species_columns))
for (i in 1:n_types) {
parcelles_type_i <- which(data$forest == forest_types[i])
n_i <- length(parcelles_type_i)
poids[i] <- n_i / 1000
W_i <- diag(1/n_i, n_i, n_i)
I_i <- rep(1, n_i)
Q_i <- as.matrix(x_cr[parcelles_type_i, ])
x_b_i <- t(Q_i) %*% W_i %*% I_i
barycentres_types[i, ] <- t(x_b_i)
}
print("Barycentres des types forestiers :")
print(barycentres_types)
normes_carre_barycentres <- rowSums(barycentres_types^2)
print("Normes euclidiennes carrées des barycentres :")
print(normes_carre_barycentres)
inertie_inter_types <- sum(poids * normes_carre_barycentres)
print(paste("Inertie inter-types :", inertie_inter_types))
R2 <- inertie_inter_types / inertie_totale
pourcentage_information <- R2 * 100
print(paste("R² :", R2))
print(paste("Pourcentage d'information expliqué :", pourcentage_information, "%"))
print(normes_carre_barycentres)
# Afficher les types forestiers, leur nombre de parcelles et vérifier leur ordre
for (i in 1:n_types) {
parcelles_type_i <- which(data$forest == forest_types[i])
cat("Type forestier :", forest_types[i], "\n")
cat("Nombre de parcelles pour ce type :", length(parcelles_type_i), "\n")
cat("Norme euclidienne carrée du barycentre :", normes_carre_barycentres[i], "\n\n")
}
rm(list = ls())
tab <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep = ";")
data <- tab[1 :1000,]
species_columns <- grep("gen", colnames(data), value = TRUE)
density_data <- data[species_columns] / data$surface
W <- diag(1/1000, 1000, 1000)
I_n <- rep(1, 1000)
Q <- as.matrix(density_data)
x_b <- t(Q) %*% W %*% I_n # moyenne (par projection)
x_c <- Q - I_n %*% t(x_b) #x centré (par projection)
vec_norm <- sqrt(diag(t(x_c) %*% W %*% x_c))
x_cr <- sweep(x_c, 2, vec_norm, FUN = "/")
tableau_cr <- as.data.frame(x_cr)
bar <- t(x_cr) %*% W %*% I_n
barycentre <- t(bar)
print(barycentre)
inertie_totale <- sum(diag(t(x_cr) %*% W %*% x_cr)) #inertie
print(inertie_totale)
print(tableau_cr)
forest_types <- unique(data$forest)
n_types <- length(forest_types)
poids <- numeric(n_types)
barycentres_types <- matrix(0, n_types, length(species_columns))
for (i in 1:n_types) {
parcelles_type_i <- which(data$forest == forest_types[i])
n_i <- length(parcelles_type_i)
poids[i] <- n_i / 1000
W_i <- diag(1/n_i, n_i, n_i)
I_i <- rep(1, n_i)
Q_i <- as.matrix(x_cr[parcelles_type_i, ])
x_b_i <- t(Q_i) %*% W_i %*% I_i
barycentres_types[i, ] <- t(x_b_i)
}
print("Barycentres des types forestiers :")
print(barycentres_types)
normes_carre_barycentres <- rowSums(barycentres_types^2)
print(normes_carre_barycentres)
inertie_inter_types <- sum(poids * normes_carre_barycentres)
print(inertie_inter_types)
R2 <- inertie_inter_types / inertie_totale
pourcentage_information <- R2 * 100
print(R2)
print(pourcentage_information)
print(inertie_inter_types)
R2 <- inertie_inter_types / inertie_totale
print(R2)
print(barycentres_types)
rm(list = ls())
tab <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep = ";")
data <- tab[1 :1000,]
species_columns <- grep("gen", colnames(data), value = TRUE)
density_data <- data[species_columns] / data$surface
W <- diag(1/1000, 1000, 1000)
I_n <- rep(1, 1000)
Q <- as.matrix(density_data)
x_b <- t(Q) %*% W %*% I_n # moyenne (par projection)
x_c <- Q - I_n %*% t(x_b) #x centré (par projection)
vec_norm <- sqrt(diag(t(x_c) %*% W %*% x_c))
x_cr <- sweep(x_c, 2, vec_norm, FUN = "/")
tableau_cr <- as.data.frame(x_cr)
bar <- t(x_cr) %*% W %*% I_n
barycentre <- t(bar)
print(barycentre)
inertie_totale <- sum(diag(t(x_cr) %*% W %*% x_cr)) #inertie
print(inertie_totale)
print(tableau_cr)
forest_types <- unique(data$forest)
n_types <- length(forest_types)
poids <- numeric(n_types)
barycentres_types <- matrix(0, n_types, length(species_columns))
for (i in 1:n_types) {
parcelles_type_i <- which(data$forest == forest_types[i])
n_i <- length(parcelles_type_i)
poids[i] <- n_i / 1000
W_i <- diag(1/n_i, n_i, n_i)
I_i <- rep(1, n_i)
Q_i <- as.matrix(x_cr[parcelles_type_i, ])
x_b_i <- t(Q_i) %*% W_i %*% I_i
barycentres_types[i, ] <- t(x_b_i)
}
normes_carre_barycentres <- rowSums(barycentres_types^2)
inertie_inter_types <- sum(poids * normes_carre_barycentres)
print(inertie_inter_types)
R2 <- inertie_inter_types / inertie_totale
print(R2)
forest_types <- unique(data$forest)
n_types <- length(forest_types)
R2_variables <- numeric(length(species_columns))
for (j in 1:length(species_columns)) {
variance_totale_j <- sum((x_cr[, j] - mean(x_cr[, j]))^2) / 1000
variance_inter_j <- 0
for (i in 1:n_types) {
parcelles_type_i <- which(data$forest == forest_types[i])
n_i <- length(parcelles_type_i)
poids_i <- n_i / 1000
W_i <- diag(1/n_i, n_i, n_i)
I_i <- rep(1, n_i)
Q_i <- as.matrix(x_cr[parcelles_type_i, j])
barycentre_i <- t(Q_i) %*% W_i %*% I_i
variance_inter_j <- variance_inter_j + poids_i * as.numeric(barycentre_i)^2
}
R2_variables[j] <- variance_inter_j / variance_totale_j
}
print("R² pour chaque variable (densité de peuplement) :")
print(R2_variables)
densite_max <- species_columns[which.max(R2_variables)]
densite_min <- species_columns[which.min(R2_variables)]
cat("Densité la plus liée au type :", densite_max, "avec R² =", max(R2_variables), "\n")
cat("Densité la moins liée au type :", densite_min, "avec R² =", min(R2_variables), "\n")
R2_global <- sum(R2_variables) / length(R2_variables)
print(paste("R² moyen des variables :", R2_global))
R2_partition <- sum(poids * rowSums(barycentres_types^2)) / inertie_totale
print(paste("R² de la partition :", R2_partition))
cat("Les deux R² sont-ils égaux ? :", abs(R2_partition - R2_global) < 1e-6, "\n")
rm(list = ls())
tab <- read.csv("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/Datagenus.csv", sep = ";")
data <- tab[1 :1000,]
species_columns <- grep("gen", colnames(data), value = TRUE)
density_data <- data[species_columns] / data$surface
W <- diag(1/1000, 1000, 1000)
I_n <- rep(1, 1000)
Q <- as.matrix(density_data)
x_b <- t(Q) %*% W %*% I_n # moyenne (par projection)
x_c <- Q - I_n %*% t(x_b) #x centré (par projection)
vec_norm <- sqrt(diag(t(x_c) %*% W %*% x_c))
x_cr <- sweep(x_c, 2, vec_norm, FUN = "/")
tableau_cr <- as.data.frame(x_cr)
bar <- t(x_cr) %*% W %*% I_n
barycentre <- t(bar)
print(barycentre)
inertie_totale <- sum(diag(t(x_cr) %*% W %*% x_cr)) #inertie
print(inertie_totale)
print(tableau_cr)
forest_types <- unique(data$forest)
n_types <- length(forest_types)
poids <- numeric(n_types)
barycentres_types <- matrix(0, n_types, length(species_columns))
for (i in 1:n_types) {
parcelles_type_i <- which(data$forest == forest_types[i])
n_i <- length(parcelles_type_i)
poids[i] <- n_i / 1000
W_i <- diag(1/n_i, n_i, n_i)
I_i <- rep(1, n_i)
Q_i <- as.matrix(x_cr[parcelles_type_i, ])
x_b_i <- t(Q_i) %*% W_i %*% I_i
barycentres_types[i, ] <- t(x_b_i)
}
normes_carre_barycentres <- rowSums(barycentres_types^2)
inertie_inter_types <- sum(poids * normes_carre_barycentres)
print(inertie_inter_types)
R2 <- inertie_inter_types / inertie_totale
print(R2)
forest_types <- unique(data$forest)
n_types <- length(forest_types)
R2_variables <- numeric(length(species_columns))
for (j in 1:length(species_columns)) {
variance_totale_j <- sum((x_cr[, j] - mean(x_cr[, j]))^2) / 1000
variance_inter_j <- 0
for (i in 1:n_types) {
parcelles_type_i <- which(data$forest == forest_types[i])
n_i <- length(parcelles_type_i)
poids_i <- n_i / 1000
W_i <- diag(1/n_i, n_i, n_i)
I_i <- rep(1, n_i)
Q_i <- as.matrix(x_cr[parcelles_type_i, j])
barycentre_i <- t(Q_i) %*% W_i %*% I_i
variance_inter_j <- variance_inter_j + poids_i * as.numeric(barycentre_i)^2
}
R2_variables[j] <- variance_inter_j / variance_totale_j
}
print(R2_variables)
densite_max <- species_columns[which.max(R2_variables)]
densite_min <- species_columns[which.min(R2_variables)]
cat("Densité la plus liée au type :", densite_max, "avec R² =", max(R2_variables), "\n")
cat("Densité la moins liée au type :", densite_min, "avec R² =", min(R2_variables), "\n")
R2_global <- sum(R2_variables) / length(R2_variables)
print(R2_global)
R2_partition <- sum(poids * rowSums(barycentres_types^2)) / inertie_totale
print(R2_partition)
load("C:/Users/damie/Desktop/MASTER/ADM/tp/tp1/densité.csv.RData")
